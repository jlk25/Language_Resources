Using MOA
Question 1
What is the percentage of correct classifications?
74.2%
77.7%
80.5%
84.5%
85.1%
85.8%
---
Correct answer(s):
80.5%
---
Feedback correct:
(More precisely, 80.465%)

Question 2
Edit the command line to evaluate the Hoeffding Tree model instead of the Naive Bayes model.
What is the percentage of correct classifications?
74.2%
77.7%
80.5%
84.5%
85.1%
85.8%
---
Correct answer(s):
84.5%
---
Feedback correct:
(More precisely, 84.474%)

Question 3
Which model performs best according to the Kappa statistic?
Hoeffding Tree
Naive Bayes
---
Correct answer(s):
Hoeffding Tree
---
Feedback correct:
The Kappa statistic is 76.7% for a Hoeffding tree and 70.7% for Naive Bayes.

Question 4
In MOA, you can nest commands. For example, the LearnModel and EvaluateModel steps can be rolled into one, avoiding the need to create an external file. You can’t do this within the interactive Configure interface; instead you have to edit the Configure command text.
OzaBag is an incremental bagging technique. Evaluate it as follows:
EvaluateModel -m (LearnModel -l meta.OzaBag
-s generators.WaveformGenerator -m 1000000)
-s (generators.WaveformGenerator -i 2) -i 1000000
Do this by copying this command and pasting it as the Configure text using right-click “Enter configuration”.
What is OzaBag’s accuracy?
74.2%
77.7%
80.5%
84.5%
85.1%
85.8%
---
Correct answer(s):
85.8%
---
Feedback correct:
(More precisely, 85.821%)

Question 5
The task EvaluatePeriodicHeldOutTest trains a model while taking performance snapshots at periodic intervals on a held-out test set.
The following command trains the HoeffdingTree classifier on a 100,000,000 samples from the WaveformGenerator data, holding out the first 100,000 samples as a test set. After every 1,000,000 examples it performs a test on this set:
EvaluatePeriodicHeldOutTest -l trees.HoeffdingTree 
-s generators.WaveformGenerator 
-n 100000 -i 10000000 -f 1000000
You can copy this configuration and paste it in (cheating!), or (work harder and learn more) set it up in the interactive Configure interface (test size 100,000, train size 10,000,000, sample frequency 1,000,000).
It outputs a CSV file with 10 rows in the center panel, and final statistics in the lower panel.
What is the final accuracy and Kappa statistic?
Select all the answers you think are correct.
Accuracy: 74.2%
Accuracy: 77.7%
Accuracy: 85.1%
Kappa statistic: 74.2%
Kappa statistic: 77.7%
Kappa statistic: 80.5%
---
Correct answer(s):
Accuracy: 85.1%
Kappa statistic: 77.7%

Question 6
Another evaluation method is “prequential”, which interleaves testing and training.
Individual examples are used to test the model before they are used for training; the accuracy is incrementally updated. The order is important: the model is always tested on examples it has not yet seen. Full use is made of all available data because no holdout set is needed for testing.
Here is a EvaluatePrequential task that trains a HoeffdingTree classifier on 1,000,000 examples of the WaveformGenerator data, testing every 10,000 examples, to create a 100-line CSV file:
EvaluatePrequential -l trees.HoeffdingTree
-s generators.WaveformGenerator
-i 1000000 -f 10000
Set it up in the interactive Configure interface and run it. At the bottom, the GUI shows a graphical display of the results – a learning curve. You can compare the results of two different tasks: click around the tasks and you will find that the current one is displayed in red and the previously selected one in blue.
Compare the prequential evaluation of Naive Bayes with HoeffdingTree. Does the Hoeffding Tree always outperform Naive Bayes in the learning curve display?
Yes
No
---
Correct answer(s):
No
---
Feedback correct:
There’s a brief period at the beginning when Naive Bayes is sometimes better.

Question 7
What are the final Kappa statistics?
Select all the answers you think are correct.
70.2% for Hoeffding Tree
70.2% for Naive Bayes
74.2% for Hoeffding Tree
74.2% for Naive Bayes
85.1% for Hoeffding Tree
85.1% for Naive Bayes
---
Correct answer(s):
70.2% for Naive Bayes
74.2% for Hoeffding Tree
---
Feedback correct:
70.25% for Naive Bayes has been rounded to 70.2%, following the convention of rounding to an even number (70.2%) rather than an odd one (70.3%) when both are equally close to the actual value (70.25%)
---
Feedback incorrect:
70.25% for Naive Bayes has been rounded to 70.2%, following the convention of rounding to an even number (70.2%) rather than an odd one (70.3%) when both are equally close to the actual value (70.25%)

Question 8
By default, prequential evaluation displays performance computed over a window of 1000 instances, which creates a jumpy, jagged, learning curve.
Look at the evaluator in the Configuration panel. You can see that the WindowClassificationPerformanceEvaluator is used, with a window size of 1000. Instead, select the BasicClassificationPerformanceEvaluator, which computes evaluation measures from the beginning of the stream using every example:
EvaluatePrequential -l trees.HoeffdingTree 
    -s generators.WaveformGenerator
    -e BasicClassificationPerformanceEvaluator 
    -i 1000000 -f 10000
As you can see, this ensures a smooth plot over time, because each individual example becomes increasingly less significant to the overall average.
Compare again the prequential evaluations of Naive Bayes and Hoeffding Tree using the BasicClassificationPerformanceEvaluator. Does the Hoeffding Tree always outperform Naive Bayes in the learning curve display?
Yes
No
---
Correct answer(s):
No
---
Feedback correct:
Again, there’s a brief period at the beginning when Naive Bayes is better.

Question 9
What are the final Kappa statistics?
Select all the answers you think are correct.
70.7% for Hoeffding Tree
70.7% for Naive Bayes
74.2% for Hoeffding Tree
74.2% for Naive Bayes
75.8% for Hoeffding Tree
75.8% for Naive Bayes
---
Correct answer(s):
70.7% for Naive Bayes
75.8% for Hoeffding Tree

Question 9
What are the final Kappa statistics?
Select all the answers you think are correct.
70.7% for Hoeffding Tree
70.7% for Naive Bayes
74.2% for Hoeffding Tree
74.2% for Naive Bayes
75.8% for Hoeffding Tree
75.8% for Naive Bayes
---
Correct answer(s):
