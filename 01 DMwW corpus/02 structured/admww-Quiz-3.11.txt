Plotting data with ggplot2 
Question 1
Histograms can be generated with the R’s hist() function, but ggplot2 provides more powerful options for plotting.
In the video, Eibe showed how to plot a kernel density estimate for an attribute using the command ggplot(rdata, aes(x = petallength)) + geom_density(). A histogram can be plotted instead by replacing geom_density() with geom_histogram().
How many peaks are there in the histogram for the petallength attribute when geom_histogram is applied with default settings, where a “peak” is defined as a point that is higher than both its neighbors?
1
2
3
4
5
6
---
Correct answer(s):
6

Question 2
The granularity of the histogram can be adjusted by passing a value for the binwidth parameter to geom_histogram.
How many peaks are there when geom_histogram(binwidth = 0.4) is applied?
1
2
3
4
5
6
---
Correct answer(s):
3

Question 3
In the video, Eibe showed how to indicate the three different classes in the plot by changing aes(x = petallength) to aes(x = petallength, color = class).
Exactly the same can be done with histograms. How many peaks does the Iris.setosa histogram have when the default bin width is used?
1
2
3
4
5
6
---
Correct answer(s):
1

Question 4
Frequency polygons, an alternative to histograms, can be obtained using the geom_freqpoly function.
Replace the geom_histogram() call you have been using in the previous questions by geom_freqpoly().
How may peaks are there in the frequency polygon for Iris.virginica?
1
2
3
4
5
6
---
Correct answer(s):
4

Question 5
Histograms and frequency polygons can be plotted together!
Just append geom_histogram() to the last command line using the + operator. Give geom_histogram() the argument alpha = 0.5 to ensure that the histograms do not obscure the other plots.
How many peaks in the histogram plot exceed the corresponding frequency polygon plots? (Leave all other parameters of geom_histogram and geom_freqpoly at their default values, and ignore slight imprecisions in the plot.)
1
2
3
4
5
6
---
Correct answer(s):
2

Question 6
ggplot2 can make plots based on two attributes.
For example, two-dimensional kernel-density estimates can be plotted using the geom_density2d() function.
Generate such a plot using ggplot(rdata, aes(x = petallength, y = petalwidth)) + geom_density2d() + xlim(-0.5, 7.5) + ylim(-0.5, 3). This gives a contour plot.
How many peaks are there?
1
2
3
4
5
6
---
Correct answer(s):
2

Question 7
Make the density estimates class dependent by providing the color = class argument to the aes() function.
The plots for some of the classes overlap. How many overlapping areas are there?
1
2
3
4
5
6
---
Correct answer(s):
1
---
Feedback correct:
Iris-versicolor and Iris-virginica overlap

Question 8
Remove the color argument from the aes() function and replace geom_density2d() by stat_density2d(aes(fill=..level..), geom=”polygon”).
This gives a contour plot in which the fill color is based on the value of the density function. It also provides a nice legend. How many numeric values for the density levels are shown in the legend?
1
2
3
4
5
6
---
Correct answer(s):
4
---
Feedback correct:
The values shown are 0.2, 0.15, 0.1, and 0.05

Question 9
Append facet_grid(class ~ .) to the command line using the + operator: this gives a separate plot for each class value.
But only one of these plots is useful – because in the others, different density levels cannot be distinguished visually. Which one?
Iris-setosa
Iris-versicolor
Iris-virginica
---
Correct answer(s):
Iris-setosa

Question 10
The problem can be rectified by applying a logarithmic transformation.
Append scale_fill_gradient(trans=”log”) to the last command line using the + operator.
Which of these two classes exhibits greater density on average (brighter pixels correspond to greater density)?
Iris.versicolor
Iris.virginica
---
Correct answer(s):
Iris.versicolor

Question 11
Plots can be overlayed.
For example, add scatter plots to the density estimates by appending geom_point() to the command line using the + operator.
Some data points for one of the classes lie outside the contours of the corresponding density estimate. Which class?
Iris-setosa
Iris-versicolor
Iris-virginica
---
Correct answer(s):
Iris-setosa

Question 12
Histograms can be generalized to two dimensions using the geom_bin2d() function.
Try ggplot(rdata, aes(x = petallength, y = petalwidth)) + geom_bin2d().
How many bright blue bins are there?
0
1
2
3
4
5
---
Correct answer(s):
1

Question 13
Add a scatter plot, make the bins transparent, and change the bin width by providing a 2-element vector using the c() function: ggplot(rdata, aes(x = petallength, y = petalwidth)) + geom_bin2d(alpha = 0.7, binwidth = c(0.8,0.8)) + geom_point().
How many of the resulting bins appear to contain only two data points?
0
1
2
3
4
5
---
Correct answer(s):
0
1
---
Feedback correct:
For one rectangle there are two data points exactly on the boundary; it’s not really clear whether they are in or out.
For one rectangle there are two data points exactly on the boundary; it’s not really clear whether they are in or out.
---
Feedback correct:
For one rectangle there are two data points exactly on the boundary; it’s not really clear whether they are in or out.

Question 14
A smoothed version of the scatterplot can be used to visually investigate the relationship between two numeric attributes.
Try ggplot(rdata, aes(x = petallength, y = petalwidth)) + stat_smooth() + geom_point().
The gray area indicates 95% confidence limits. What is the smoothed value of petalwidth when petallength = 4?
1.1
1.25
1.3
1.5
1.6
---
Correct answer(s):
1.25

Question 15
Use 99% confidence limits instead by applying stat_smooth(level=0.99), and generate plots on a per-class basis by passing color=class as an argument to the aes() function.
How many areas are there where the confidence bands for more than one class overlap?
0
1
2
3
4
5
---
Correct answer(s):
2
---
Feedback correct:
One between petallength = 4.5 and 4.75, and the other, very small, around petallength = 5

Question 15
Use 99% confidence limits instead by applying stat_smooth(level=0.99), and generate plots on a per-class basis by passing color=class as an argument to the aes() function.
How many areas are there where the confidence bands for more than one class overlap?
0
1
2
3
4
5
---
Correct answer(s):
